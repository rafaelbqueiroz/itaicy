### üìã Estado atual (o que o agent j√° entregou)

| Item                                | Foi feito?                                    | Observa√ß√£o r√°pida                                                                                 |
| ----------------------------------- | --------------------------------------------- | ------------------------------------------------------------------------------------------------- |
| **Pipeline de extra√ß√£o**            | ‚òëÔ∏è Parcial                                    | Capturou `Home` e `Acomoda√ß√µes`, mas ignorou Experi√™ncias, Galeria, Contato, Blog, Footer/Header. |
| **Carga dentro do Supabase**        | ‚ùå                                             | Conte√∫do permanece num `export.json` no `public/seed/` & mem√≥ria. Sem tabelas/popula√ß√£o real.     |
| **Interface CMS**                   | ‚òëÔ∏è MVP                                        | Sidebar ‚Üí p√°ginas, editor de campos; mas sem WYSIWYG, sem preview, sem upload de m√≠dia.           |
| **Reflexo em tempo-real**           | ‚ùå                                             | Edi√ß√£o grava no estado React local, n√£o faz `PATCH` no Supabase nem hot-reload no front p√∫blico.  |
| **Autentica√ß√£o & seguran√ßa**        | ‚ùå                                             | Rota `/cms` aberta, sem Supabase Auth, sem RLS.                                                   |
| **Heur√≠sticas de Nielsen**          | ‚ö†Ô∏è                                            | Falta feedback de status, undo, confirma√ß√£o de publish, consist√™ncia de rotulagem.                |
| **Global blocks (header / footer)** | ‚ùå                                             | N√£o aparecem; risco de serem removidos acidentalmente.                                            |
| **Biblioteca de m√≠dia**             | UI apenas; n√£o envia arquivos para `storage`. |                                                                                                   |
| **Rollback / versionamento**        | ‚ùå                                             | Nenhum log ou ‚ÄúHist√≥rico de publica√ß√µes‚Äù.                                                         |

---

## üîç Cr√≠tica UX (foco em usu√°rio leigo)

1. **Visibilidade do estado**

   * O bot√£o ‚ÄúPublicar‚Äù n√£o mostra se algo foi realmente salvo ou falhou.
   * Falta indicador de *‚Äúdraft versus publicado‚Äù*.

2. **Reconhecimento > Memoriza√ß√£o**

   * Campos soltos em formul√°rios. N√£o h√° pr√©-visualiza√ß√£o ou miniatura do bloco, obrigando o Robson a lembrar layout.

3. **Principal √ó acess√≥rio**

   * Robson s√≥ precisa mexer em textos, imagens, v√≠deos e n√∫meros; mas pode apagar blocos inteiros sem aviso.

4. **Banco de m√≠dia**

   * Upload n√£o existe ‚Üí ele n√£o consegue trocar hero-video nem thumbnails de su√≠tes.

5. **Seguran√ßa / irreversibilidade**

   * Qualquer erro acidental j√° afeta produ√ß√£o (n√£o h√° staging nem bot√£o *Undo*).

---

## üõ†Ô∏è Mudan√ßas necess√°rias (road-map r√°pido para o agent)

### 1. **Completar ingest√£o & seed**

| A√ß√£o                                                                                                           | Detalhe                           |
| -------------------------------------------------------------------------------------------------------------- | --------------------------------- |
| Rastrear **todas** as rotas (`/`, `/acomodacoes`, `/experiencias`, `/galeria`, `/contato`, footer, header).    | Conectar AST parse ‚Üí JSON blocks. |
| Criar tabelas `pages`, `blocks`, `media_library`, `global_settings`.                                           | SQL no Supabase.                  |
| Rodar script `seed-supabase.ts` populando **todas** as entradas + upload de assets para bucket `public/media`. | Retornar `publicURL` seguro.      |

### 2. **Autentica√ß√£o & RLS**

* Ativar Supabase Auth (email+magic-link).
* Policies:

  ```sql
  create policy "Owner can mutate" on blocks
    for all using (auth.uid() = owner) with check (auth.uid() = owner);
  create policy "Everyone can read published" on blocks
    for select using (published = true);
  ```
* Rota `/cms` protegida por `ProtectedRoute`.

### 3. **Editor de blocos 2.0**

| Elemento             | Requisito UX                                                                                                    |
| -------------------- | --------------------------------------------------------------------------------------------------------------- |
| **√Årvore visual**    | Replica a ordem real (drag-and-drop). ‚ÄúGlobal‚Äù grupo fixo para Header/Footer.                                   |
| **Modo preview**     | Pane √† direita -> render do bloco enquanto edita; toggle ‚ÄúDesktop / Mobile‚Äù.                                    |
| **Media picker**     | Integra `react-dropzone` + Supabase Storage; mostra thumb, lazy-mapa de uso (quais blocos consomem cada asset). |
| **Undo / Hist√≥rico** | Tabela `revisions`; a√ß√£o ‚ÄúReverter para 10 h atr√°s‚Äù.                                                            |
| **Publicar seguro**  | Workflow: Draft ‚Üí Preview ‚Üí Publish. Pode agendar.                                                              |
| **Feedback**         | Toast ‚ÄúSalvo‚Äù, *spinner* na barra topo, erros vis√≠veis.                                                         |

### 4. **Hot-reload no front p√∫blico**

* Front consome de Supabase via SSR ‚Üí `getServerSideProps` ou `react-query` + `realtime` channel.
* Stale-While-Revalidate; a cada `blocks.updated_at` notifica√ß√£o, favicon pisca ‚Äúnovo conte√∫do‚Äù.

### 5. **Simplifica√ß√£o para su√≠tes**

* **Collection** `accommodations`: campos
  `name` (default ‚ÄúSu√≠te Compacta / Ampla / Master‚Äù), `max_guests`, `size_m2`, `amenities[]`, `base_price`, `season_prices`.
* UI: tabela edit√°vel estilo Notion; preview card id√™ntico ao site.

### 6. **Biblioteca de m√≠dia**

* Tabs: *Uploads* ‚Ä¢ *Em uso* ‚Ä¢ *N√£o usado*.
* Exibe peso e orienta√ß√£o; bot√£o ‚ÄúSubstituir no bloco X‚Äù.

### 7. **SEO integrado por p√°gina**

* Dentro do editor de p√°gina, sub-tab SEO (title, description, OG image).
* Valida√ß√£o de comprimento, contador de pixels.

### 8. **Help & guard-rails**

* On-boarding tour (React Joyride).
* Tooltips ‚Äú‚ö†Ô∏è Remover bloco afeta a Home inteira‚Äù.
* Campo link ‚Üí auto-complete routes para evitar 404.

---

## ‚úÖ Crit√©rio de ‚Äúfeito‚Äù

1. Robson faz login, troca a hero-image ‚Üí clica ‚ÄúPreview‚Äù ‚Üí website paralelo mostra a nova arte.
2. Clica ‚ÄúPublicar‚Äù ‚Üí site p√∫blico reflete sem refresh manual.
3. Pode editar pre√ßo da su√≠te, salvar, ver card atualizado.
4. Upload de v√≠deo de 5 MB conclu√≠do ‚Üí CDN URL gerado.
5. Se remover bloco por engano ‚Üí ‚ÄúUndo‚Äù restaura.
6. Todo acesso `/cms` protegido; p√∫blico s√≥ v√™ `published=true`.
7. Lighthouse passa Core Web Vitals + meta tags.

---

### ‚úçÔ∏è Mensagem curta para o agent

> **Refa√ßa** o CMS seguindo o plano acima. Comece pela *ingest√£o completa + seed*, **antes** de redesenhar UI. Foque em autentica√ß√£o, real-time refletindo no site e usabilidade (pr√©-visualiza√ß√£o, undo, media picker). S√≥ marque tarefas conclu√≠das quando cada crit√©rio acima estiver verificado em staging.

Assim evitamos retrabalho, protegemos o conte√∫do existente e entregamos ao Robson um painel realmente confi√°vel e f√°cil de usar.
